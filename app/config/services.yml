# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    # Ce paramètre permet d'injecter dans le Service Mailer l'addresse email de l'expéditeur
    admin_email: amasadio@gmail.com

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
    
    #### Services Declaration ############################################################################
    # makes classes in src/Sadio/JobsPlateform/Services/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Sadio\JobsPlateformBundle\Services\:
        resource: '../../src/Sadio/JobsPlateformBundle/Services/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        #exclude: '../../src/Sadio/JobsPlateformBundle/{Entity,Repository,Tests}'
        # On ne rajoute la previous line que 6 ds resource on avait mis '../../src/Sadio/JobsPlateformBundle/*'
    
    Sadio\AuthBundle\Services\:
        resource: '../../src/Sadio/AuthBundle/Services/*'
    
    CoreBundle\Services\:
        resource: '../../src/CoreBundle/Services/*'

    #### Services Configuration ############################################################################
    # explicitly configure service (injecting arguments defined above in parameters section)
    CoreBundle\Services\Mailer:
        arguments:
            $adminEmailAdress: '%admin_email%'
    
    # explicitly configure service (The following service will be called back after each PostPersist Event)
    CoreBundle\Services\EventListeners\DoctrineListeners\EntityCreationListener:
        tags:
          - { name: doctrine.event_listener, event: postPersist }

    # This Subscriber (Listener) will be called each time a new FOSUser will be registered
    CoreBundle\Services\EventListeners\FOSListeners\RegistrationListener:
        tags:
          - { name: kernel.event_subscriber }
    
    
    #### Controllers ############################################################################
    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Sadio\JobsPlateformBundle\Controller\:
        resource: '../../src/Sadio/JobsPlateformBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    Sadio\AuthBundle\Controller\:
        resource: '../../src/Sadio/AuthBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    CoreBundle\Controller\:
        resource: '../../src/CoreBundle/Controller'
        public: true
        tags: ['controller.service_arguments']            


    #### DataFixtures ##########################################################################
    # Ce code permet d'autoriser les dossiers DataFixtures à etre utiliser commer service (load:fixtures)
    Sadio\AuthBundle\DataFixtures\:
        resource: '../../src/Sadio/AuthBundle/DataFixtures'
        tags: ['doctrine.fixture.orm']

    Sadio\JobsPlateformBundle\DataFixtures\:
        resource: '../../src/Sadio/JobsPlateformBundle/DataFixtures'
        tags: ['doctrine.fixture.orm']